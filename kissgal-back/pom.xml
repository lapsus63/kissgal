<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.infovergne</groupId>
    <artifactId>kissgal-back</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>kissgal-back</name>
    <description>Backend for KissGal application</description>

    <!-- Project properties and versions for dependencies and plugins -->
    <properties>
        <!-- Java version -->
        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.release>${java.version}</maven.compiler.release>

        <!-- Dependency versions -->
        <archunit-junit5.version>1.3.0</archunit-junit5.version>
<!--        <commons-lang3.version>3.17.0</commons-lang3.version>-->
        <datasource-proxy.version>1.10.1</datasource-proxy.version>
<!--        <easy-random.version>5.0.0</easy-random.version>-->
<!--        <json.version>20250107</json.version>-->
        <liquibase-core.version>4.31.0</liquibase-core.version>
<!--        <lombok.version>1.18.36</lombok.version>-->
<!--        <org.mapstruct.version>1.6.3</org.mapstruct.version>-->
        <postgre.version>42.7.5</postgre.version>
        <slf4j-api.version>2.0.16</slf4j-api.version>
<!--        <spring-context-support.version>7.0.0-M1</spring-context-support.version>-->
<!--        <spring-oidc.version>2.0.7</spring-oidc.version>-->
        <springdoc-openapi-starter-webmvc-ui.version>2.8.4</springdoc-openapi-starter-webmvc-ui.version>
        <swagger-annotations.version>2.2.28</swagger-annotations.version>
        <zonky-embedded-postgres.version>2.0.7</zonky-embedded-postgres.version>
        <zonky-spring.version>2.5.1</zonky-spring.version>

        <!-- Plugin versions -->
        <formatter-maven.version>2.24.1</formatter-maven.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
<!--        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>-->
        <maven-surefire-report-plugin.version>3.5.0</maven-surefire-report-plugin.version>

        <!-- Skip unit tests -->
        <skip.ut>false</skip.ut>
        <!-- Skip integration tests -->
        <skip.it>false</skip.it>
    </properties>

    <!-- Project dependencies
    mvn dependency:analyze
    mvn dependency:tree -Dverbose -Dincludes=org.apache.commons:commons-lang3
    mvn dependency:tree -Dverbose | grep "conflict"
    mvn clean verify -Dskip.ut=true
    mvn help:effective-pom -Doutput=effective-pom.xml -Dverbose=true
    -->
    <dependencies>

        <!-- Spring Boot Dependencies -->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Apache Commons + Lombok + JSON(azure events) + CSV(azure files) -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.json</groupId>-->
<!--            <artifactId>json</artifactId>-->
<!--            <version>${json.version}</version>-->
<!--        </dependency>-->

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <!-- Swagger -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
        </dependency>

        <!-- PostgreSQL + Liquibase -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgre.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <!-- Debug batch statements - https://www.baeldung.com/jpa-hibernate-batch-insert-update -->
            <groupId>net.ttddyy</groupId>
            <artifactId>datasource-proxy</artifactId>
            <version>${datasource-proxy.version}</version>
        </dependency>

<!--        &lt;!&ndash; MapStruct &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.mapstruct</groupId>-->
<!--            <artifactId>mapstruct</artifactId>-->
<!--            <version>${org.mapstruct.version}</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; Easy Random Core for Testing &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.jeasy</groupId>-->
<!--            <artifactId>easy-random-core</artifactId>-->
<!--            <scope>test</scope>-->
<!--            <version>${easy-random.version}</version>-->
<!--        </dependency>-->
        <!-- Spring Boot Starter Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5</artifactId>
            <version>${archunit-junit5.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Zonky Embedded Database -->
        <dependency>
            <groupId>io.zonky.test</groupId>
            <artifactId>embedded-database-spring-test</artifactId>
            <scope>test</scope>
            <version>${zonky-spring.version}</version>
        </dependency>
        <dependency>
            <groupId>io.zonky.test</groupId>
            <artifactId>embedded-postgres</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-io</groupId>
                    <artifactId>commons-io</artifactId>
                </exclusion>
            </exclusions>
            <version>${zonky-embedded-postgres.version}</version>
        </dependency>

    </dependencies>

    <!-- Build configuration -->
    <build>
        <finalName>kissgal-back</finalName>
        <plugins>
            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- Unit test plugin, skip.ut allows to skip unit tests but not integration tests (with failsafe) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${skip.ut}</skipTests>
                </configuration>
            </plugin>
            <!-- integration tests with failsafe -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipTests>${skip.it}</skipTests>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Failsafe reports -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
                <configuration>
                    <skipSurefireReport>false</skipSurefireReport>
                    <reportsDirectories>
                        <reportsDirectory>${basedir}/target/failsafe-reports</reportsDirectory>
                    </reportsDirectories>
                </configuration>
            </plugin>
            <!-- JaCoCo reports -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>

                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                            <outputDirectory>${project.build.directory}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                            <outputDirectory>${project.build.directory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-results</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>jacoco-*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Compiler Plugin for Lombok -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
<!--                        <path>-->
<!--                            <groupId>org.mapstruct</groupId>-->
<!--                            <artifactId>mapstruct-processor</artifactId>-->
<!--                            <version>${org.mapstruct.version}</version>-->
<!--                        </path>-->
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- Formatter Maven Plugin for Code Styling -->
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>${formatter-maven.version}</version>
                <configuration>
                    <configFile>${project.basedir}/eclipse-formatter-config.xml</configFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
